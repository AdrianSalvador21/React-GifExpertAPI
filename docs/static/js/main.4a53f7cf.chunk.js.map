{"version":3,"sources":["components/AddCategory/AddCategory.jsx","components/GifGridItem/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp/GifExpertApp.jsx","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","onChange","target","value","type","GifGridItem","id","title","url","img","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","idx","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAiBvC,OACI,0BAAMC,SAVW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMZ,2BACEO,SAhBkB,SAACL,GACzBF,EAAcE,EAAEM,OAAOC,QAgBjBA,MAAOV,EACPW,KAAK,WCdAC,EATK,SAAC,GAA0B,EAAzBC,GAA0B,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,IAAc,EAATC,IACpC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKH,EAAKI,IAAKL,IACpB,2BAAIA,K,uBCNGM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfP,EADe,0FAC0EM,EAD1E,sBAEFE,MAAMR,GAFJ,cAEfS,EAFe,gBAGAA,EAAKC,OAHL,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAZ,GAAQ,IAAD,EAC3B,MAAO,CACLH,GAAIG,EAAIH,GACRC,MAAOE,EAAIF,MACXC,IAAG,UAAEC,EAAIa,cAAN,aAAE,EAAYC,iBAAiBf,QATjB,kBAadY,GAbc,4CAAH,sDCkCLI,EA7BC,SAAC,GAAgB,IAAfV,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EACdtB,mBAAS,CACjC2B,KAAM,GACNM,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRf,EAAQC,GAAUe,MAAK,SAACC,GACtBH,EAAS,CACPR,KAAMW,EACNL,SAAS,SAGZ,CAACX,IAEGY,EDZwBK,CAAajB,GAAhCQ,EADkB,EACvBH,KAAaM,EADU,EACVA,QAQpB,OACE,oCACE,wBAAIf,UAAU,qCAAqCI,GAClDW,GAAW,uCACZ,yBAAKf,UAAU,aAETY,EAAOD,KAAI,SAACZ,GACV,OACE,kBAAC,EAAD,eAAauB,IAAKvB,EAAIH,GACTG,IAAKA,GACDA,UEIlBwB,EAxBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,SADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,6BACE,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEI2C,EAAWb,KAAI,SAACP,EAAUqB,GAAX,OAEX,kBAAC,EAAD,CAASrB,SAAUA,EACVkB,IAAKlB,UCNbsB,MARf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,QCFN2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4a53f7cf.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) =>  {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={handleInputChange}\n          value={inputValue}\n          type=\"text\"/>\n      </form>\n  );\n};\n\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GifGridItem = ({id, title, url, img}) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=RB43XXIAQH2zNppki7UveG1liwuZ98Yv&q=${category}&limit=10`;\n  const resp = await fetch(url);\n  const {data} = await resp.json();\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n\n  return gifs;\n};\n","import React, {useState, useEffect} from 'react';\nimport GifGridItem from \"../GifGridItem/GifGridItem\";\nimport {getGifs} from \"../../helpers/getGifs\";\nimport {useFetchGifs} from \"../../hooks/useFetchGifs\";\n\nconst GifGrid = ({category}) => {\n  const {data:images, loading} = useFetchGifs(category);\n\n  // const [images, setImages] = useState([]);\n  /* useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setImages(imgs);\n    });\n  }, [category]); */\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n      {loading && <p>Cargando</p>}\n      <div className=\"card-grid\">\n          {\n            images.map((img) => {\n              return (\n                <GifGridItem key={img.id}\n                             img={img}\n                             {...img}\n                />\n              )\n            })\n          }\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false\n      });\n    });\n  }, [category]);\n\n  return state;  //{data:[], loading: true}\n};\n","import React, {useState} from 'react';\nimport AddCategory from \"../AddCategory/AddCategory\";\nimport GifGrid from \"../GifGrid/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Goku']);\n\n  return (\n    <div>\n      <h2>GifExpertApp</h2>\n\n      <AddCategory setCategories={setCategories}/>\n      <hr />\n      <ol>\n        {\n          categories.map((category, idx) =>\n            (\n              <GifGrid category={category}\n                       key={category}\n              />\n            )\n          )\n        }\n      </ol>\n    </div>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\n\nimport GifExpertApp from \"./components/GifExpertApp/GifExpertApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GifExpertApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}